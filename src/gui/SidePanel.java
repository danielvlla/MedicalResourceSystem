/*

Presented constantly at the left of the JFrame for easy access
Contains a number of items for navigating through the program

By Daniel Vella

*/

package gui;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;

public class SidePanel extends javax.swing.JPanel 
   {
   
   private final MainPanel mainPanel;
   private ImportAvailability importFile;
   private ExportReportPanel saveFile;
   
   // SidePanel Constructor
   public SidePanel(MainPanel panel) 
      {
         
      initComponents();
           
      this.mainPanel = panel;
      
      PanelHandler panelHandler = new PanelHandler();
      viewAvailabilitiesButton_.addActionListener(panelHandler);
      registerDoctorButton_.addActionListener(panelHandler);
      viewDoctorsButton_.addActionListener(panelHandler);
      importAvailabilitiesButton_.addActionListener(panelHandler);
      exportReportButton_.addActionListener(panelHandler);
            
      }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents()
   {
      java.awt.GridBagConstraints gridBagConstraints;

      background_ = new javax.swing.JPanel();
      importAvailabilitiesButton_ = new javax.swing.JButton();
      registerDoctorButton_ = new javax.swing.JButton();
      viewDoctorsButton_ = new javax.swing.JButton();
      exportReportButton_ = new javax.swing.JButton();
      viewAvailabilitiesButton_ = new javax.swing.JButton();
      availabilitiesSideLabel_ = new javax.swing.JLabel();
      menuSideLabel_ = new javax.swing.JLabel();
      doctorsSideLabel_ = new javax.swing.JLabel();
      mainTitleOne_ = new javax.swing.JLabel();
      mainTitleTwo_ = new javax.swing.JLabel();
      mainIconLabel_ = new javax.swing.JLabel();

      setBackground(new java.awt.Color(255, 255, 255));

      background_.setBackground(new java.awt.Color(39, 48, 66));
      background_.setLayout(new java.awt.GridBagLayout());

      importAvailabilitiesButton_.setBackground(new java.awt.Color(39, 48, 66));
      importAvailabilitiesButton_.setFont(new java.awt.Font("Lucida Grande", 1, 11)); // NOI18N
      importAvailabilitiesButton_.setForeground(new java.awt.Color(203, 211, 230));
      importAvailabilitiesButton_.setText("Import Availabilities");
      importAvailabilitiesButton_.setBorderPainted(false);
      importAvailabilitiesButton_.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
      importAvailabilitiesButton_.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
      importAvailabilitiesButton_.setOpaque(true);
      importAvailabilitiesButton_.addMouseListener(new java.awt.event.MouseAdapter()
      {
         public void mouseExited(java.awt.event.MouseEvent evt)
         {
            importAvailabilitiesButton_MouseExited(evt);
         }
         public void mouseEntered(java.awt.event.MouseEvent evt)
         {
            importAvailabilitiesButton_MouseEntered(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 10;
      gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
      gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
      gridBagConstraints.ipady = 30;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
      background_.add(importAvailabilitiesButton_, gridBagConstraints);

      registerDoctorButton_.setBackground(new java.awt.Color(39, 48, 66));
      registerDoctorButton_.setFont(new java.awt.Font("Lucida Grande", 1, 11)); // NOI18N
      registerDoctorButton_.setForeground(new java.awt.Color(203, 211, 230));
      registerDoctorButton_.setText("Register Doctor");
      registerDoctorButton_.setBorderPainted(false);
      registerDoctorButton_.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
      registerDoctorButton_.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
      registerDoctorButton_.setOpaque(true);
      registerDoctorButton_.addMouseListener(new java.awt.event.MouseAdapter()
      {
         public void mouseExited(java.awt.event.MouseEvent evt)
         {
            registerDoctorButton_MouseExited(evt);
         }
         public void mouseEntered(java.awt.event.MouseEvent evt)
         {
            registerDoctorButton_MouseEntered(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 7;
      gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
      gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
      gridBagConstraints.ipady = 30;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
      background_.add(registerDoctorButton_, gridBagConstraints);

      viewDoctorsButton_.setBackground(new java.awt.Color(39, 48, 66));
      viewDoctorsButton_.setFont(new java.awt.Font("Lucida Grande", 1, 11)); // NOI18N
      viewDoctorsButton_.setForeground(new java.awt.Color(203, 211, 230));
      viewDoctorsButton_.setText("View Doctors");
      viewDoctorsButton_.setBorderPainted(false);
      viewDoctorsButton_.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
      viewDoctorsButton_.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
      viewDoctorsButton_.setOpaque(true);
      viewDoctorsButton_.addMouseListener(new java.awt.event.MouseAdapter()
      {
         public void mouseExited(java.awt.event.MouseEvent evt)
         {
            viewDoctorsButton_MouseExited(evt);
         }
         public void mouseEntered(java.awt.event.MouseEvent evt)
         {
            viewDoctorsButton_MouseEntered(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 8;
      gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
      gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
      gridBagConstraints.ipady = 30;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
      background_.add(viewDoctorsButton_, gridBagConstraints);

      exportReportButton_.setBackground(new java.awt.Color(39, 48, 66));
      exportReportButton_.setFont(new java.awt.Font("Lucida Grande", 1, 11)); // NOI18N
      exportReportButton_.setForeground(new java.awt.Color(203, 211, 230));
      exportReportButton_.setText("Export Report");
      exportReportButton_.setBorderPainted(false);
      exportReportButton_.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
      exportReportButton_.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
      exportReportButton_.setOpaque(true);
      exportReportButton_.addMouseListener(new java.awt.event.MouseAdapter()
      {
         public void mouseExited(java.awt.event.MouseEvent evt)
         {
            exportReportButton_MouseExited(evt);
         }
         public void mouseEntered(java.awt.event.MouseEvent evt)
         {
            exportReportButton_MouseEntered(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 11;
      gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
      gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
      gridBagConstraints.ipady = 30;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
      background_.add(exportReportButton_, gridBagConstraints);

      viewAvailabilitiesButton_.setBackground(new java.awt.Color(39, 48, 66));
      viewAvailabilitiesButton_.setFont(new java.awt.Font("Lucida Grande", 1, 11)); // NOI18N
      viewAvailabilitiesButton_.setForeground(new java.awt.Color(203, 211, 230));
      viewAvailabilitiesButton_.setText("View Availabilities");
      viewAvailabilitiesButton_.setBorderPainted(false);
      viewAvailabilitiesButton_.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
      viewAvailabilitiesButton_.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
      viewAvailabilitiesButton_.setOpaque(true);
      viewAvailabilitiesButton_.addMouseListener(new java.awt.event.MouseAdapter()
      {
         public void mouseExited(java.awt.event.MouseEvent evt)
         {
            viewAvailabilitiesButton_MouseExited(evt);
         }
         public void mouseEntered(java.awt.event.MouseEvent evt)
         {
            viewAvailabilitiesButton_MouseEntered(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 5;
      gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
      gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
      gridBagConstraints.ipady = 30;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
      background_.add(viewAvailabilitiesButton_, gridBagConstraints);

      availabilitiesSideLabel_.setBackground(new java.awt.Color(72, 108, 122));
      availabilitiesSideLabel_.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
      availabilitiesSideLabel_.setForeground(new java.awt.Color(170, 183, 195));
      availabilitiesSideLabel_.setText("Availabilities");
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 9;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
      gridBagConstraints.insets = new java.awt.Insets(20, 0, 20, 0);
      background_.add(availabilitiesSideLabel_, gridBagConstraints);

      menuSideLabel_.setBackground(new java.awt.Color(72, 108, 122));
      menuSideLabel_.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
      menuSideLabel_.setForeground(new java.awt.Color(170, 183, 195));
      menuSideLabel_.setText("Menu");
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 4;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
      gridBagConstraints.insets = new java.awt.Insets(20, 0, 20, 0);
      background_.add(menuSideLabel_, gridBagConstraints);

      doctorsSideLabel_.setBackground(new java.awt.Color(72, 108, 122));
      doctorsSideLabel_.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
      doctorsSideLabel_.setForeground(new java.awt.Color(170, 183, 195));
      doctorsSideLabel_.setText("Doctors");
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 6;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
      gridBagConstraints.insets = new java.awt.Insets(20, 0, 20, 0);
      background_.add(doctorsSideLabel_, gridBagConstraints);

      mainTitleOne_.setForeground(new java.awt.Color(170, 183, 195));
      mainTitleOne_.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      mainTitleOne_.setText("M E D I C A L   R E S O U R C E");
      mainTitleOne_.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
      gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
      background_.add(mainTitleOne_, gridBagConstraints);

      mainTitleTwo_.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
      mainTitleTwo_.setForeground(new java.awt.Color(170, 183, 195));
      mainTitleTwo_.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      mainTitleTwo_.setText("Management System");
      mainTitleTwo_.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 2;
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
      gridBagConstraints.insets = new java.awt.Insets(4, 0, 20, 0);
      background_.add(mainTitleTwo_, gridBagConstraints);

      mainIconLabel_.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/mainIcon.png"))); // NOI18N
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 0;
      gridBagConstraints.gridwidth = 2;
      background_.add(mainIconLabel_, gridBagConstraints);

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(background_, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(background_, javax.swing.GroupLayout.DEFAULT_SIZE, 846, Short.MAX_VALUE)
      );
   }// </editor-fold>//GEN-END:initComponents
   
   // Changes between panels 
   private class PanelHandler implements ActionListener 
      {
      @Override
      public void actionPerformed(ActionEvent e)
         {

         if(e.getSource() == viewAvailabilitiesButton_)
            {
               
            mainPanel.setViewAvailabilitiesPanel();
            
            } 
         else if(e.getSource() == registerDoctorButton_)
            {
               
            mainPanel.setRegisterDoctorPanel();
            
            }
         else if(e.getSource() == viewDoctorsButton_)
            {
            
            mainPanel.setViewDoctorsPanel();
            
            }
         else if(e.getSource() == importAvailabilitiesButton_)
            {
               
            importFile = new ImportAvailability();
               
            }  
         else if(e.getSource() == exportReportButton_)
            {
            
            saveFile = new ExportReportPanel();
               
            }

         }

      }
   
   
   /*
   
   Mouse Hover Effects
   
   */
   
   private void viewAvailabilitiesButton_MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewAvailabilitiesButton_MouseEntered
      
      setColor(viewAvailabilitiesButton_);
      
   }//GEN-LAST:event_viewAvailabilitiesButton_MouseEntered

   private void viewAvailabilitiesButton_MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewAvailabilitiesButton_MouseExited
      
      resetColor(viewAvailabilitiesButton_);
      
   }//GEN-LAST:event_viewAvailabilitiesButton_MouseExited

   private void registerDoctorButton_MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerDoctorButton_MouseEntered
     
      setColor(registerDoctorButton_);
      
   }//GEN-LAST:event_registerDoctorButton_MouseEntered

   private void registerDoctorButton_MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerDoctorButton_MouseExited
      
      resetColor(registerDoctorButton_);
      
   }//GEN-LAST:event_registerDoctorButton_MouseExited

   private void viewDoctorsButton_MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewDoctorsButton_MouseEntered
      
      setColor(viewDoctorsButton_);
      
   }//GEN-LAST:event_viewDoctorsButton_MouseEntered

   private void viewDoctorsButton_MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewDoctorsButton_MouseExited
      
      resetColor(viewDoctorsButton_);
      
   }//GEN-LAST:event_viewDoctorsButton_MouseExited

   private void importAvailabilitiesButton_MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importAvailabilitiesButton_MouseEntered
      
      setColor(importAvailabilitiesButton_);
      
   }//GEN-LAST:event_importAvailabilitiesButton_MouseEntered

   private void importAvailabilitiesButton_MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importAvailabilitiesButton_MouseExited
      
      resetColor(importAvailabilitiesButton_);
      
   }//GEN-LAST:event_importAvailabilitiesButton_MouseExited

   private void exportReportButton_MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportReportButton_MouseEntered
      
      setColor(exportReportButton_);
      
   }//GEN-LAST:event_exportReportButton_MouseEntered

   private void exportReportButton_MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportReportButton_MouseExited
      
      resetColor(exportReportButton_);
      
   }//GEN-LAST:event_exportReportButton_MouseExited
   
   /*
   
   Button Colours for Hover Effect
   
   */
   
   private void setColor(JButton button)
      {
         
      button.setBackground(new Color(71, 78, 95));
      button.setForeground(Color.WHITE);
      
      }
  
   private void resetColor(JButton button)
      {
         
      button.setBackground(new Color(39, 48, 66));
      button.setForeground(new Color(203, 211, 230));
      
      }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JLabel availabilitiesSideLabel_;
   private javax.swing.JPanel background_;
   private javax.swing.JLabel doctorsSideLabel_;
   private javax.swing.JButton exportReportButton_;
   private javax.swing.JButton importAvailabilitiesButton_;
   private javax.swing.JLabel mainIconLabel_;
   private javax.swing.JLabel mainTitleOne_;
   private javax.swing.JLabel mainTitleTwo_;
   private javax.swing.JLabel menuSideLabel_;
   private javax.swing.JButton registerDoctorButton_;
   private javax.swing.JButton viewAvailabilitiesButton_;
   private javax.swing.JButton viewDoctorsButton_;
   // End of variables declaration//GEN-END:variables
}
