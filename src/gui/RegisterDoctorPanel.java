/*

Panel containing a form for registering doctors

By Daniel Vella

*/

package gui;

import defaultpackage.Doctor;
import managers.DoctorManager;
import defaultpackage.Surgeon;
import defaultpackage.SurgeonCertificate;
import java.awt.Color;
import java.util.Objects;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

public class RegisterDoctorPanel extends javax.swing.JPanel 
   {

   private String discipline_;
   private String name_;
   private String address_;
   private String preferredContact_;
   private String contactId_;
   private String certificateDate_;
   private Doctor newDoctor_;
   
   public RegisterDoctorPanel() 
      {
      
      initComponents();
      certificateTextField_.setEditable(false);
                  
      }
   
   private void registerADoctor()
      {
               
      name_ = nameTextField_.getText();
      address_ = addressTextField_.getText();
      preferredContact_ = contactComboBox_.getSelectedItem().toString();
      contactId_ = contactTextField_.getText();
      discipline_ = disciplineComboBox_.getSelectedItem().toString();
      
      if (Objects.equals(disciplineComboBox_.getSelectedItem().toString(), "Surgery"))
         {

         certificateDate_ = certificateTextField_.getText();
         String[] date = certificateDate_.split("/");
         int day = Integer.parseInt(date[0]);
         int month = Integer.parseInt(date[1]);
         int year = Integer.parseInt(date[2]);
         SurgeonCertificate aCertificate = new SurgeonCertificate(year, month, day);
         
         newDoctor_ = new Surgeon(name_, preferredContact_, contactId_, address_, aCertificate);

         }
      
      else if (!Objects.equals(disciplineComboBox_.getSelectedItem().toString(), "Surgery"))
         {
            
         newDoctor_ = new Doctor(name_, discipline_, preferredContact_, contactId_, address_);
         
         }
      
      // Adds doctor to Doctor Manager
      if (DoctorManager.hasFreeDisciplineSpace(discipline_))
         {
         
         DoctorManager.add(newDoctor_);
         JOptionPane.showMessageDialog(null, "Registered Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);

         
         }
         
      else
         {
         
         JOptionPane.showMessageDialog(null, discipline_ + " already contains 10 doctors", "Error", JOptionPane.INFORMATION_MESSAGE);

         
         }                 
                    
      }
   
   private void resetFields()
      {
       
      nameTextField_.setText("Doctor Name");
      nameTextField_.setForeground(new Color(204,204,204));
      addressTextField_.setText("Address");
      addressTextField_.setForeground(new Color(204,204,204));
      contactTextField_.setText("Contact ID");
      contactTextField_.setForeground(new Color(204,204,204));
      certificateTextField_.setText("No Certificate Date Needed");
      certificateTextField_.setForeground(new Color(204,204,204));
      disciplineComboBox_.setSelectedIndex(0);
      contactComboBox_.setSelectedIndex(0);
         
      }
   
   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents()
   {
      java.awt.GridBagConstraints gridBagConstraints;

      registerBackground_ = new javax.swing.JPanel();
      titleRegisterDoctor_ = new javax.swing.JLabel();
      registerButton_ = new javax.swing.JButton();
      contactComboBox_ = new javax.swing.JComboBox<>();
      disciplineComboBox_ = new javax.swing.JComboBox<>();
      contactSeparator_ = new javax.swing.JSeparator();
      addressSeparator_ = new javax.swing.JSeparator();
      nameSeparator_ = new javax.swing.JSeparator();
      nameTextField_ = new javax.swing.JTextField();
      certificateTextField_ = new javax.swing.JTextField();
      contactTextField_ = new javax.swing.JTextField();
      disciplineIcon_ = new javax.swing.JLabel();
      addressIcon_ = new javax.swing.JLabel();
      nameIcon_ = new javax.swing.JLabel();
      preferredIcon_ = new javax.swing.JLabel();
      contactIcon_ = new javax.swing.JLabel();
      resetIcon_ = new javax.swing.JLabel();
      certificateIcon_ = new javax.swing.JLabel();
      certificateSeparator_ = new javax.swing.JSeparator();
      addressTextField_ = new javax.swing.JTextField();
      messageLabel_ = new javax.swing.JLabel();

      setBackground(new java.awt.Color(255, 255, 255));

      registerBackground_.setBackground(new java.awt.Color(255, 255, 255));
      registerBackground_.setLayout(new java.awt.GridBagLayout());

      titleRegisterDoctor_.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
      titleRegisterDoctor_.setText("Register Doctor");
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 0;
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints.insets = new java.awt.Insets(90, 0, 30, 150);
      registerBackground_.add(titleRegisterDoctor_, gridBagConstraints);

      registerButton_.setBackground(new java.awt.Color(102, 102, 102));
      registerButton_.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
      registerButton_.setForeground(new java.awt.Color(102, 204, 255));
      registerButton_.setText("Register Doctor");
      registerButton_.setContentAreaFilled(false);
      registerButton_.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            registerButton_ActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 11;
      gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
      gridBagConstraints.insets = new java.awt.Insets(30, 0, 30, 0);
      registerBackground_.add(registerButton_, gridBagConstraints);

      contactComboBox_.setForeground(new java.awt.Color(102, 102, 102));
      contactComboBox_.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Telephone", "Skype", "Facetime" }));
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 8;
      gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints.insets = new java.awt.Insets(20, 10, 15, 0);
      registerBackground_.add(contactComboBox_, gridBagConstraints);

      disciplineComboBox_.setForeground(new java.awt.Color(102, 102, 102));
      disciplineComboBox_.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cardiology", "Pulmonology", "Infectious Disease", "Hematology", "Intensive Care Medicine", "Neurology", "Ophthalmology", "Orthopedics", "Urology", "Surgery" }));
      disciplineComboBox_.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            disciplineComboBox_ActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 5;
      gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints.insets = new java.awt.Insets(18, 10, 15, 0);
      registerBackground_.add(disciplineComboBox_, gridBagConstraints);

      contactSeparator_.setForeground(new java.awt.Color(102, 102, 102));
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 10;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
      registerBackground_.add(contactSeparator_, gridBagConstraints);

      addressSeparator_.setForeground(new java.awt.Color(102, 102, 102));
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 4;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.insets = new java.awt.Insets(0, 10, 15, 0);
      registerBackground_.add(addressSeparator_, gridBagConstraints);

      nameSeparator_.setForeground(new java.awt.Color(102, 102, 102));
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 2;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.insets = new java.awt.Insets(0, 10, 15, 0);
      registerBackground_.add(nameSeparator_, gridBagConstraints);

      nameTextField_.setForeground(new java.awt.Color(204, 204, 204));
      nameTextField_.setText("Doctor Name");
      nameTextField_.setBorder(null);
      nameTextField_.addFocusListener(new java.awt.event.FocusAdapter()
      {
         public void focusGained(java.awt.event.FocusEvent evt)
         {
            nameTextField_FocusGained(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints.insets = new java.awt.Insets(20, 10, 10, 0);
      registerBackground_.add(nameTextField_, gridBagConstraints);

      certificateTextField_.setForeground(new java.awt.Color(204, 204, 204));
      certificateTextField_.setText("No Certificate Date Needed");
      certificateTextField_.setBorder(null);
      certificateTextField_.addFocusListener(new java.awt.event.FocusAdapter()
      {
         public void focusGained(java.awt.event.FocusEvent evt)
         {
            certificateTextField_FocusGained(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 6;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints.insets = new java.awt.Insets(20, 10, 10, 0);
      registerBackground_.add(certificateTextField_, gridBagConstraints);

      contactTextField_.setForeground(new java.awt.Color(204, 204, 204));
      contactTextField_.setText("Contact ID");
      contactTextField_.setBorder(null);
      contactTextField_.addFocusListener(new java.awt.event.FocusAdapter()
      {
         public void focusGained(java.awt.event.FocusEvent evt)
         {
            contactTextField_FocusGained(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 9;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints.insets = new java.awt.Insets(20, 10, 10, 0);
      registerBackground_.add(contactTextField_, gridBagConstraints);

      disciplineIcon_.setForeground(new java.awt.Color(102, 102, 102));
      disciplineIcon_.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/disciplineIcon.png"))); // NOI18N
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 5;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
      gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
      registerBackground_.add(disciplineIcon_, gridBagConstraints);

      addressIcon_.setForeground(new java.awt.Color(102, 102, 102));
      addressIcon_.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      addressIcon_.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addressIcon.png"))); // NOI18N
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 3;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
      gridBagConstraints.insets = new java.awt.Insets(20, 20, 10, 20);
      registerBackground_.add(addressIcon_, gridBagConstraints);

      nameIcon_.setForeground(new java.awt.Color(102, 102, 102));
      nameIcon_.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nameIcon.png"))); // NOI18N
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
      gridBagConstraints.insets = new java.awt.Insets(20, 20, 10, 20);
      registerBackground_.add(nameIcon_, gridBagConstraints);

      preferredIcon_.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/preferredIcon.png"))); // NOI18N
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 8;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
      gridBagConstraints.insets = new java.awt.Insets(20, 20, 10, 20);
      registerBackground_.add(preferredIcon_, gridBagConstraints);

      contactIcon_.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/contactIcon.png"))); // NOI18N
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 9;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
      gridBagConstraints.insets = new java.awt.Insets(20, 20, 10, 20);
      registerBackground_.add(contactIcon_, gridBagConstraints);

      resetIcon_.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/resetIcon.png"))); // NOI18N
      resetIcon_.addMouseListener(new java.awt.event.MouseAdapter()
      {
         public void mouseClicked(java.awt.event.MouseEvent evt)
         {
            resetIcon_MouseClicked(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 11;
      registerBackground_.add(resetIcon_, gridBagConstraints);

      certificateIcon_.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/certificateIcon.png"))); // NOI18N
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 6;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
      gridBagConstraints.insets = new java.awt.Insets(20, 20, 10, 20);
      registerBackground_.add(certificateIcon_, gridBagConstraints);

      certificateSeparator_.setForeground(new java.awt.Color(0, 0, 0));
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 7;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.insets = new java.awt.Insets(0, 10, 15, 0);
      registerBackground_.add(certificateSeparator_, gridBagConstraints);

      addressTextField_.setForeground(new java.awt.Color(204, 204, 204));
      addressTextField_.setText("Address");
      addressTextField_.setBorder(null);
      addressTextField_.addFocusListener(new java.awt.event.FocusAdapter()
      {
         public void focusGained(java.awt.event.FocusEvent evt)
         {
            addressTextField_FocusGained(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 3;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints.insets = new java.awt.Insets(20, 10, 10, 0);
      registerBackground_.add(addressTextField_, gridBagConstraints);
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 12;
      gridBagConstraints.gridwidth = 2;
      registerBackground_.add(messageLabel_, gridBagConstraints);

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(registerBackground_, javax.swing.GroupLayout.DEFAULT_SIZE, 762, Short.MAX_VALUE)
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(registerBackground_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
      );
   }// </editor-fold>//GEN-END:initComponents

   private void nameTextField_FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameTextField_FocusGained
      
      nameTextField_.setText("");
      nameTextField_.setForeground(Color.DARK_GRAY);
      
   }//GEN-LAST:event_nameTextField_FocusGained

   private void contactTextField_FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contactTextField_FocusGained
      
      contactTextField_.setText("");
      contactTextField_.setForeground(Color.DARK_GRAY);
      
   }//GEN-LAST:event_contactTextField_FocusGained

   private void resetIcon_MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetIcon_MouseClicked
      
      resetFields();
      messageLabel_.setText("Reset all Fields");
      messageLabel_.setForeground(Color.LIGHT_GRAY);
      
   }//GEN-LAST:event_resetIcon_MouseClicked

   private void disciplineComboBox_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disciplineComboBox_ActionPerformed
      
      disciplineComboBox_ = (JComboBox)evt.getSource();
      discipline_ = disciplineComboBox_.getSelectedItem().toString();
      
      if (Objects.equals(discipline_, "Surgery"))
         {
            
         certificateTextField_.setEditable(true);   
         certificateTextField_.setText("Certificate Date DD/MM/YYYY");
        
         }
      else 
         {
            
         certificateTextField_.setEditable(false);
         certificateTextField_.setText("No Certificate Date Needed");
         
         }
      
   }//GEN-LAST:event_disciplineComboBox_ActionPerformed

   private void addressTextField_FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addressTextField_FocusGained
      
      addressTextField_.setText("");
      addressTextField_.setForeground(Color.DARK_GRAY);
      
   }//GEN-LAST:event_addressTextField_FocusGained

   private void registerButton_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButton_ActionPerformed
      
      // If fields have not been filled in with anything
      if (!Objects.equals(nameTextField_.getText(), "DoctorName")
              && !Objects.equals(addressTextField_.getText(), "Address")
              && !Objects.equals(contactTextField_.getText(), "Contact ID"))
         {
         
         // if fields contain invalid characters
         if (nameTextField_.getText().matches("[a-zA-Z .]+")
            && addressTextField_.getText().matches("[a-zA-Z0-9 ,-.-–()]+") 
            && contactTextField_.getText().matches("[a-zA-Z0-9 -.-–@(),_+]+"))
            {
            
            if ((contactComboBox_.getSelectedIndex() == 0) 
               && contactTextField_.getText().matches("[0-9 ()+]+"))
               
               {
               
               // If surgery is selected, certificate is needed
               if (Objects.equals(disciplineComboBox_.getSelectedItem().toString(), "Surgery"))
                  {  

                  // Correct Date entered 
                  if (certificateTextField_.getText().matches("([0-9]{2})/([0-9]{2})/([0-9]{4})"))
                     {

                     registerADoctor(); 
                     resetFields();

                     }
                  else
                     {

                     JOptionPane.showMessageDialog(null, "Invalid Date Format. Use DD/MM/YYYY", "Error", JOptionPane.ERROR_MESSAGE);
                     messageLabel_.setText("Surgeon Not Registered. Input Digits followed by slash eg. 12/10/2017");
                     messageLabel_.setForeground(Color.ORANGE);

                     }

                  }

               else 
                  {

                  registerADoctor();
                  resetFields();

                  }

               } 
         
            else if ((contactComboBox_.getSelectedIndex() == 0) 
               && !contactTextField_.getText().matches("[0-9 ()]+"))
               {
               
               JOptionPane.showMessageDialog(null, "Invalid Characters for Telephone", "Error", JOptionPane.ERROR_MESSAGE);
            
               }
            
            else 
               {
               
               registerADoctor();
               resetFields();
               
               }
            
         }
                
         else 
            
            {
            
            JOptionPane.showMessageDialog(null, "Empty or Invalid Characters in Fields", "Error", JOptionPane.ERROR_MESSAGE);
            messageLabel_.setText("Invalid Characters found, Doctor Not Registered");
            messageLabel_.setForeground(Color.RED);
               
            }
         
         }
      else
         {
         
         JOptionPane.showMessageDialog(null, "Empty or Invalid Characters in Fields", "Error", JOptionPane.ERROR_MESSAGE);
         messageLabel_.setText("Empty Fields Found, Doctor Not Registered");
         messageLabel_.setForeground(Color.RED); 
         
         }
      
   }//GEN-LAST:event_registerButton_ActionPerformed

   private void certificateTextField_FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_certificateTextField_FocusGained
      
      if (Objects.equals(certificateTextField_.getText(), "Certificate Date DD/MM/YYYY"))
         {
            
         certificateTextField_.setText("");
         certificateTextField_.setForeground(Color.DARK_GRAY);

         }
      
   }//GEN-LAST:event_certificateTextField_FocusGained

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JLabel addressIcon_;
   private javax.swing.JSeparator addressSeparator_;
   private javax.swing.JTextField addressTextField_;
   private javax.swing.JLabel certificateIcon_;
   private javax.swing.JSeparator certificateSeparator_;
   private javax.swing.JTextField certificateTextField_;
   private javax.swing.JComboBox<String> contactComboBox_;
   private javax.swing.JLabel contactIcon_;
   private javax.swing.JSeparator contactSeparator_;
   private javax.swing.JTextField contactTextField_;
   private javax.swing.JComboBox<String> disciplineComboBox_;
   private javax.swing.JLabel disciplineIcon_;
   private javax.swing.JLabel messageLabel_;
   private javax.swing.JLabel nameIcon_;
   private javax.swing.JSeparator nameSeparator_;
   private javax.swing.JTextField nameTextField_;
   private javax.swing.JLabel preferredIcon_;
   private javax.swing.JPanel registerBackground_;
   private javax.swing.JButton registerButton_;
   private javax.swing.JLabel resetIcon_;
   private javax.swing.JLabel titleRegisterDoctor_;
   // End of variables declaration//GEN-END:variables
}
